// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit 4b41cf3d71aa85cd4e75c96cbb54324481ee0b27).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { Dir as __Dir } from "./dir_type";

export type Player = {
  id: string,
  nick: string,
  x: number,
  y: number,
  dir: __Dir,
  nextDir: __Dir | undefined,
  score: number,
  alive: boolean,
  moveEveryMs: bigint,
  lastStepAtMs: bigint,
  joinedAtMs: bigint,
  lastSeenAtMs: bigint,
};

/**
 * A namespace for generated helper functions.
 */
export namespace Player {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("id", AlgebraicType.createStringType()),
      new ProductTypeElement("nick", AlgebraicType.createStringType()),
      new ProductTypeElement("x", AlgebraicType.createI32Type()),
      new ProductTypeElement("y", AlgebraicType.createI32Type()),
      new ProductTypeElement("dir", __Dir.getTypeScriptAlgebraicType()),
      new ProductTypeElement("nextDir", AlgebraicType.createOptionType(__Dir.getTypeScriptAlgebraicType())),
      new ProductTypeElement("score", AlgebraicType.createI32Type()),
      new ProductTypeElement("alive", AlgebraicType.createBoolType()),
      new ProductTypeElement("moveEveryMs", AlgebraicType.createI64Type()),
      new ProductTypeElement("lastStepAtMs", AlgebraicType.createI64Type()),
      new ProductTypeElement("joinedAtMs", AlgebraicType.createI64Type()),
      new ProductTypeElement("lastSeenAtMs", AlgebraicType.createI64Type()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: Player): void {
    Player.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): Player {
    return Player.getTypeScriptAlgebraicType().deserialize(reader);
  }

}


